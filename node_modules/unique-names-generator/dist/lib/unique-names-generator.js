"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UniqueNamesGenerator = (function () {
    function UniqueNamesGenerator(config) {
        var length = config.length, separator = config.separator, dictionaries = config.dictionaries, style = config.style;
        this.dictionaries = dictionaries;
        this.separator = separator;
        this.length = length;
        this.style = style;
    }
    UniqueNamesGenerator.prototype.generate = function () {
        var _this = this;
        if (!this.dictionaries) {
            throw new Error('Cannot find any dictionary. Please provide at least one, or leave ' +
                'the "dictionary" field empty in the config object');
        }
        if (this.length <= 0) {
            throw new Error('Invalid length provided');
        }
        if (this.length > this.dictionaries.length) {
            throw new Error('The length cannot be bigger than the number of dictionaries.\n' +
                ("Length provided: " + this.length + ". Number of dictionaries provided: " + this.dictionaries.length));
        }
        return this.dictionaries.slice(0, this.length).reduce(function (acc, curr) {
            var rnd = Math.floor(Math.random() * curr.length);
            var word = curr[rnd] || '';
            if (_this.style === 'lowerCase') {
                word = word.toLowerCase();
            }
            else if (_this.style === 'capital') {
                var _a = word.split(''), firstLetter = _a[0], rest = _a.slice(1);
                word = firstLetter.toUpperCase() + rest.join('');
            }
            else if (_this.style === 'upperCase') {
                word = word.toUpperCase();
            }
            return acc ? "" + acc + _this.separator + word : "" + word;
        }, '');
    };
    return UniqueNamesGenerator;
}());
exports.UniqueNamesGenerator = UniqueNamesGenerator;
